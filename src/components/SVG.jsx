import React from 'react'
import PropTypes from 'prop-types'
import styled from 'styled-components'
import tw from 'tailwind.macro'
import { width as twWidth } from '../../tailwind'
import { hidden } from '../styles/utils'

const Wrapper = styled.svg`
  ${tw`absolute`};
  stroke: currentColor;
  ${props => props.hiddenMobile && hidden};
  color: ${props => props.stroke};
  width: ${props => props.svgWidth};
  fill: ${props => props.fill};
  left: ${props => props.left};
  top: ${props => props.top};
`

const icons = {
  triangle: {
    shape: (
      <>
        <g fill="none" fill-rule="evenodd" transform="translate(12 12)">
          <circle cx="480.59" cy="424.48" r="89.57" fill="#00D8FF" fill-rule="nonzero"/>
          <path stroke="#00D8FF" strokeWidth="24" d="M480.59,242.37 C600.84,242.37 712.59,259.63 796.79,288.63 C898.28,323.57 960.67,376.53 960.67,424.48 C960.67,474.48 894.54,530.72 785.56,566.83 C703.16,594.13 594.74,608.38 480.56,608.38 C363.56,608.38 252.69,595 169.38,566.53 C63.96,530.53 0.47,473.53 0.47,424.53 C0.47,376.96 60.04,324.42 160.11,289.53 C244.68,260 359.16,242.37 480.59,242.37 Z"/>
          <path stroke="#00D8FF" strokeWidth="24" d="M322.06,334 C382.13,229.83 452.89,141.68 520.06,83.19 C601.06,12.73 678.06,-14.81 719.62,9.09 C762.91,34.09 778.62,119.45 755.45,231.9 C737.93,316.9 696.11,417.9 639.08,516.85 C580.64,618.18 513.69,707.51 447.4,765.45 C363.53,838.77 282.4,865.3 239.97,840.82 C198.77,817.05 182.97,739.19 202.77,635.08 C219.48,547.11 261.39,439.15 322.06,334 Z"/>
          <path stroke="#00D8FF" strokeWidth="24" d="M322.21,517.06 C262,413 220.92,307.66 203.82,220.23 C183.21,114.9 197.82,34.36 239.28,10.33 C282.53,-14.67 364.36,14.33 450.21,90.57 C515.12,148.2 581.77,234.89 639,333.69 C697.6,435 741.55,537.59 758.65,624 C780.28,733.29 762.77,816.79 720.34,841.35 C679.18,865.18 603.85,839.95 523.53,770.83 C455.66,712.39 383.05,622.15 322.21,517.06 Z"/>
        </g>
      </>
    ),
    viewBox: '0 0 985 875',
  },
  circle: {
    shape: (
      <path d="M15,30A15,15,0,1,1,30,15,15,15,0,0,1,15,30ZM15,6.23A8.77,8.77,0,1,0,23.77,15,8.77,8.77,0,0,0,15,6.23Z" />
    ),
    viewBox: '0 0 30 30',
  },
  arrowUp: {
    shape: (
      <polygon fill="none" stroke="#00ffff" strokeWidth="3" points="161.5 246.25 91.428 311.006 98.367 215.847 4.049 201.437 82.775 147.531 35.234 64.806 126.464 92.747 161.5 4 196.536 92.747 287.766 64.806 240.225 147.531 318.951 201.437 224.633 215.847 231.572 311.006"/>
    ),
    viewBox: '0 0 323 315',
  },
  upDown: {
    shape: (
      <polygon fill="none" stroke="#00ff00" strokeWidth="3" points="161.5 246.25 91.428 311.006 98.367 215.847 4.049 201.437 82.775 147.531 35.234 64.806 126.464 92.747 161.5 4 196.536 92.747 287.766 64.806 240.225 147.531 318.951 201.437 224.633 215.847 231.572 311.006"/>
    ),
    viewBox: '0 0 323 315',
  },
  box: {
    shape: (
      <g fill="#8CC84B" transform="translate(-5 -5)">
    <path d="M1033.06281,31.7445312 C1094.79617,-3.59121094 1175.20383,-3.75082031 1236.88398,31.7445312 C1547.19121,207.084297 1857.59598,382.14918 2167.85,557.595352 C2226.20496,590.466016 2265.23832,655.409297 2264.64422,722.64918 L2264.64422,1777.56074 C2265.07871,1847.58492 2222.18813,1914.07996 2160.62324,1946.20578 C1851.33574,2120.57902 1542.20785,2295.16508 1232.97355,2469.53832 C1169.96332,2505.5657 1087.94184,2502.79027 1026.90012,2463.81012 C934.175938,2410.05723 841.292148,2356.57035 748.559102,2302.87066 C729.609922,2291.57387 708.248867,2282.58254 694.868281,2264.20973 C706.697109,2248.26652 727.845352,2246.28027 745.029961,2239.31953 C783.735234,2227.01187 819.283789,2207.25578 854.841211,2188.08492 C863.832539,2181.93109 874.810117,2184.28977 883.429023,2189.79629 C962.719414,2235.25836 1041.3093,2282.04164 1120.8657,2327.06922 C1137.8375,2336.86746 1155.02211,2323.8593 1169.52883,2315.77242 C1473.03492,2144.23668 1776.91344,1973.34824 2080.36633,1801.7593 C2091.60992,1796.35031 2097.82582,1784.41508 2096.9125,1772.09855 C2097.12531,1424.10578 2096.9657,1076.05094 2097.01891,728.058164 C2098.30465,714.083477 2090.21777,701.234922 2077.58203,695.515586 C1769.36746,521.940391 1461.3125,348.09918 1153.15113,174.479648 C1142.22261,166.966418 1127.79936,166.94528 1116.84887,174.426445 C808.6875,348.09918 500.685742,522.1 192.524375,695.666328 C179.932969,701.394531 171.482539,714.030273 172.981094,728.058164 C173.034297,1076.05094 172.981094,1424.10578 172.981094,1772.15176 C171.886676,1784.45994 178.574259,1796.14729 189.740078,1801.44008 C271.974375,1848.07262 354.315078,1894.37707 436.602578,1940.85 C482.960234,1965.80227 539.878711,1980.6282 590.953711,1961.51055 C636.025625,1945.34566 667.619414,1899.35156 666.759297,1851.49535 C667.184922,1505.53316 666.546484,1159.51777 667.078516,813.608789 C665.952383,798.25082 680.521172,785.561875 695.453516,787.007227 C734.965703,786.741211 774.531094,786.475195 814.043281,787.113633 C830.53625,786.741211 841.88625,803.278516 839.846797,818.751758 C839.687187,1166.90414 840.272422,1515.06539 839.580781,1863.21777 C839.687187,1956.00402 801.567148,2056.96582 715.741641,2102.36582 C610.009297,2157.13844 479.324687,2145.52242 374.869219,2093.00207 C284.441641,2047.86809 198.146172,1994.60289 109.323555,1946.25012 C47.5990625,1914.30164 4.92128906,1847.54059 5.35578125,1777.56961 L5.35578125,722.64918 C4.70847656,654.017148 45.2935937,587.894531 105.466328,555.502695 C414.700625,380.987578 723.881719,206.339453 1033.06281,31.7445312 Z"/>
    <path d="M1302.83813,762.489453 C1437.70805,753.808477 1582.09246,757.346484 1703.45766,823.78832 C1797.42324,874.703711 1849.51797,981.562187 1851.17613,1085.95559 C1848.55145,1100.03668 1833.83191,1107.80434 1820.38926,1106.83781 C1781.25836,1106.78461 1742.11859,1107.36984 1702.9877,1106.5718 C1686.38832,1107.21023 1676.74082,1091.90547 1674.65703,1077.23027 C1663.41344,1027.28141 1636.17344,977.811367 1589.15961,953.719219 C1516.98957,917.58543 1433.30992,919.403203 1354.61363,920.156914 C1297.16313,923.207227 1235.38543,928.181719 1186.71344,961.965703 C1149.34711,987.556406 1137.99711,1039.21664 1151.33336,1080.82148 C1163.90703,1110.69504 1198.39152,1120.33367 1226.60691,1129.21859 C1389.14246,1171.72789 1561.37871,1167.49824 1720.81074,1223.44133 C1786.81809,1246.24773 1851.38895,1290.58367 1873.98254,1359.69453 C1903.53688,1452.32117 1890.58191,1563.03687 1824.68098,1637.39711 C1771.23844,1698.58957 1693.40227,1731.89473 1615.77004,1749.98379 C1512.49391,1773.01187 1405.31621,1773.59711 1300.43512,1763.37324 C1201.81426,1752.12965 1099.18543,1726.21973 1023.05176,1659.02418 C957.948867,1602.49586 926.151133,1514.41809 929.307852,1429.40836 C930.061562,1415.05238 944.355469,1405.04133 958.108477,1406.22066 C997.514258,1405.90145 1036.92004,1405.79504 1076.32582,1406.27387 C1092.06508,1405.14773 1103.7343,1418.75 1104.54121,1433.5848 C1111.8123,1481.175 1129.69742,1531.12387 1171.19586,1559.33926 C1251.2843,1611.00836 1351.77613,1607.47035 1443.48059,1608.9157 C1519.45465,1605.54617 1604.73926,1604.52645 1666.73863,1554.31156 C1699.44969,1525.67055 1709.14152,1477.75227 1700.30094,1436.52871 C1690.72437,1401.725 1654.3157,1385.50691 1623.05,1374.90176 C1462.59824,1324.14598 1288.43781,1342.56313 1129.53781,1285.16582 C1065.02902,1262.36828 1002.64836,1219.26488 977.86457,1152.99152 C943.282539,1059.19441 959.128203,943.176133 1031.93668,871.325312 C1102.92738,799.855781 1205.40547,772.332031 1302.83812,762.480586 L1302.83813,762.489453 Z"/>
  </g>
    ),
    viewBox: '0 0 2260 2490',
  },
  hexa: {
    shape: (
      <path fill="#FB9904" d="M55.963,16.713 C55.969,16.688 55.978,16.664 55.982,16.639 C55.998,16.527 55.995,16.414 55.973,16.301 C55.968,16.274 55.956,16.25 55.948,16.224 C55.932,16.169 55.921,16.114 55.896,16.062 C55.879,16.027 55.853,16 55.833,15.968 C55.822,15.951 55.821,15.932 55.809,15.915 L48.309,5.415 C48.203,5.267 48.06,5.172 47.905,5.102 C47.806,4.873 47.629,4.681 47.392,4.579 L38.142,0.579 C38.016,0.525 37.882,0.497 37.745,0.497 L18.245,0.497 C18.108,0.497 17.974,0.525 17.848,0.579 L8.598,4.579 C8.362,4.681 8.185,4.873 8.086,5.101 C7.932,5.171 7.788,5.267 7.682,5.415 L0.182,15.915 C0.17,15.931 0.169,15.951 0.158,15.968 C0.138,16 0.112,16.027 0.096,16.062 C0.071,16.114 0.06,16.17 0.044,16.224 C0.037,16.25 0.025,16.275 0.02,16.301 C-0.003,16.413 -0.005,16.527 0.011,16.639 C0.015,16.665 0.024,16.688 0.03,16.713 C0.05,16.801 0.081,16.885 0.124,16.966 C0.14,16.996 0.156,17.024 0.175,17.053 C0.189,17.074 0.197,17.098 0.213,17.119 L27.213,51.119 C27.221,51.129 27.234,51.133 27.242,51.142 C27.328,51.242 27.428,51.324 27.544,51.383 C27.562,51.392 27.581,51.398 27.6,51.406 C27.724,51.46 27.857,51.497 27.997,51.497 C28.137,51.497 28.27,51.46 28.394,51.406 C28.413,51.398 28.432,51.392 28.45,51.383 C28.565,51.324 28.666,51.242 28.752,51.142 C28.76,51.133 28.773,51.129 28.781,51.119 L55.781,17.119 C55.797,17.099 55.805,17.074 55.82,17.053 C55.839,17.025 55.855,16.996 55.871,16.966 C55.912,16.885 55.943,16.801 55.963,16.713 Z M18.453,2.496 L37.539,2.496 L44.708,5.596 L37.493,9.496 L18.499,9.496 L11.284,5.596 L18.453,2.496 Z M15.737,27.496 L40.255,27.496 L27.996,48.512 L15.737,27.496 Z M15.777,25.496 L19.277,11.496 L36.745,11.496 L40.809,25.496 L15.777,25.496 Z M2.801,15.69 L9.194,6.74 L17.308,11.126 L13.908,24.727 L2.855,15.721 C2.839,15.707 2.818,15.702 2.801,15.69 Z M13.006,26.572 C13.017,26.72 13.055,26.867 13.133,27 L20.1,38.945 L5.267,20.266 L13.006,26.572 Z M35.892,38.945 L42.86,27 C42.938,26.867 42.975,26.72 42.987,26.572 L50.727,20.266 L35.892,38.945 Z M42.557,24.341 L38.715,11.109 L46.798,6.74 L53.191,15.69 C53.174,15.702 53.153,15.707 53.136,15.721 L42.557,24.341 Z"/>
    ),
    viewBox: '0 0 56 52',
  },
  cross: {
    shape: (
      <polygon fill="none" stroke="#ffffff" strokeWidth="3" points="161.5 246.25 91.428 311.006 98.367 215.847 4.049 201.437 82.775 147.531 35.234 64.806 126.464 92.747 161.5 4 196.536 92.747 287.766 64.806 240.225 147.531 318.951 201.437 224.633 215.847 231.572 311.006"/>
    ),
    viewBox: '0 0 323 315',
  },
}

const SVG = ({ stroke, fill, width, icon, left, top, hiddenMobile }) => (
  <Wrapper
    viewBox={icons[icon].viewBox}
    stroke={stroke}
    fill={fill}
    svgWidth={twWidth[`${width}`]}
    left={left}
    top={top}
    hiddenMobile={hiddenMobile}
  >
    {icons[icon].shape}
  </Wrapper>
)

export default SVG

SVG.propTypes = {
  stroke: PropTypes.string,
  fill: PropTypes.string,
  width: PropTypes.number,
  icon: PropTypes.oneOf(Object.keys(icons)).isRequired,
  left: PropTypes.string,
  top: PropTypes.string,
  hiddenMobile: PropTypes.bool,
}

SVG.defaultProps = {
  stroke: 'transparent',
  width: 8,
  fill: 'none',
  left: '0%',
  top: '0%',
  hiddenMobile: false,
}
